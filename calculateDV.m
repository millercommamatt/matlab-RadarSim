function [ DV ] = calculateDV( radarStruct, interpolants)
%CACULATEDV calculates doppler velocity
%   CACULATEDV( radarStruct, interpolants) calculates the radial velocity
%   based on the radar characteristics from the input radarStruct structure
%   for the wind field encoded in the given interpolants structure.
%
%   Input Arguments:
%   radarStruct    Structure generated by the createRadarStructure
%                  function.
%
%   interpolants   Structure containing interpolatin objects created by the
%                  createInterpolants function.
%
%   Output variables:
%   DV             3D mesh grid-like array matched to the radarStruct 
%                  properties with the radial velocity value for each gate 
%                  in m/s.
%
%   See also dot, griddedInterpolant, scatteredInterpolant
%
%   Written By: Dr. Matthew A. Miller, PhD, May 2017


%interpolate the model data to get U/V/W for each radar point
% The vertical coordinate is in meters while the x and y coordiantes are in
% degrees lat/lon. The typical range for lat/lon values are typically less
% than 10 while the typical range for Z can be 10000 or more. For the
% interpolation to work best, all the dimensions should have the same
% number of digits. So, the Z values are divided by 10000.
radarU = interpolants.u(radarStruct.lonRadar,radarStruct.latRadar,radarStruct.hRadar./10000);
radarV = interpolants.v(radarStruct.lonRadar,radarStruct.latRadar,radarStruct.hRadar./10000);
radarW = interpolants.w(radarStruct.lonRadar,radarStruct.latRadar,radarStruct.hRadar./10000);


%caculate the doppler velocity
%the dot product of a vector to a unit vector in the direction of interest
%gives the projection onto the unit vector. Since we calculated a unit
%vector along the beam for each radar point when we created the radar
%structure, this dot product gives us the doppler velocity.
DV = dot(cat(4,radarU,radarV,radarW),...
    cat(4,radarStruct.uUnitRadar,radarStruct.vUnitRadar,radarStruct.wUnitRadar),4);

end

%%% OLD CODE %%%
%function [ DV ] = calculateDV( radarStruct, interpolants, hightScale)
% %this is a kludge for handling lat,lon,height(m) with model data
% %this is the remnant of an old hack to handle drastically different numbers
% %of digits in the vertical scale vs. the horzontal scale that was affecting
% %the interpolation for some model data. This problem has since been solved
% %differently and this parameter should not be needed.
% if nargin < 3
%     hightScale = 1;
% end
%radarU = interpolants.u(radarStruct.lonRadar,radarStruct.latRadar,radarStruct.hRadar./hightScale);
%radarV = interpolants.v(radarStruct.lonRadar,radarStruct.latRadar,radarStruct.hRadar./hightScale);
%radarW = interpolants.w(radarStruct.lonRadar,radarStruct.latRadar,radarStruct.hRadar./hightScale);
